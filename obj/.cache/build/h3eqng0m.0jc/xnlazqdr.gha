<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Gyakorlati feladatsor </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Gyakorlati feladatsor ">
    <meta name="generator" content="docfx 2.59.4.0">
    
    <link rel="shortcut icon" href="../../favicon.ico">
    <link rel="stylesheet" href="../../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../../styles/docfx.css">
    <link rel="stylesheet" href="../../styles/main.css">
    <meta property="docfx:navrel" content="../../toc.html">
    <meta property="docfx:tocrel" content="../toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../../index.html">
                <img id="logo" class="svg" src="../../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="">
<h1 id="gyakorlati-feladatsor" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="1">Gyakorlati feladatsor</h1>

<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="3">A feladat egy készen kapott CSV állomány feldolgozása, amely egy webshop termékeit tartalmazza. A CSV állományból ki kell nyerni a különféle típusú adatokat, majd az egyes alkotóelemekből szűrhető llistát alkotni, és a szűrések eredményét fájlba menteni. Szintén lehetővé kell tenni aggregált stasztikák megjelenítését.
A feladatsor többek között megismertet a MenuStrip használatával, a LINQ join és aggregáló műveleteivel.</p>
<h2 id="osztályszerkezet-létrehozása" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="6">Osztályszerkezet létrehozása</h2>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="7">(+/-)  Hozz létre egy Windows Forms alkalmazást!</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="9">(+/-)  Töltsd le a <a href="termekek.csv" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="9">termekek.csv</a> állományt, nem szükséges a projekthez adni, mivel a felhasználó részére fájlmegnyitó dialógusablakot fogunk felkínálni.</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="11">(+/-)  A fájl termékeket tartalmaz redundánsan tárolt adatokkal. Mi ezeket a relációs adatbázis szabályoknak megfelelő formában fogjuk tárolni. Hozz létre három osztályt az adatok tárolásához:</p>
<ul sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="12">
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="12">A <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="12">Kategoria</code> tartalmazza a kategória kódját és megnevezését</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="13">A <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="13">Raktar</code> tartalmazza a raktár kódját, nevét, és címét</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="14">A <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="14">Termek</code> taralmazza a termék kódját, nevét, listaárát, készletét, mennyiségi egységét, a felvivő felhasználó nevét, a felvitel dátumát, a kategória és a raktár kódját.</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="15">Az eredeti állomány három külön oszlopban tartalmazza a felvitel dátumát, ezt egyetlen Datetime változó reprezentálja!
Az adattípusokat értelemszerűen határozd meg a csv vizsgálatának segítségével.</li>
</ul>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="18">Példaként álljon itt a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="18">Termek</code> osztály szerkezete:</p>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="19">class Termek
{
    public string Termekkod { get; set; }
    public string Termeknev { get; set; }
    public decimal Listaar { get; set; }
    public decimal Keszlet { get; set; }
    public string Megys { get; set; }
    public string Felvitte { get; set; }
    public DateTime Felvitel { get; set; }
    public int RaktarKod { get; set; }
    public int KategoriaKod { get; set; }
}
</code></pre>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="34">(+/-)  Hozz létre a Form1-en három osztályszintű listát, egyet-egyet minden osztálytípus számára. Példányosítsd a listákat!</p>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="35">public partial class Form1 : Form
{
    List&lt;Termek&gt; termekek = new List&lt;Termek&gt;();
    List&lt;Kategoria&gt; kategoriak = new List&lt;Kategoria&gt;();
    List&lt;Raktar&gt; raktarak = new List&lt;Raktar&gt;();
    
    ...
}
</code></pre>
<h2 id="felhasználói-felület-létrehozása" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="46">Felhasználói felület létrehozása</h2>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="47">(+/-) Helyezz el egy MenuStrip komponenst a Form1-en!</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="49">(+/-) A menüben legyen egy Fájl és egy Statisztika főmenüpont. (Design nézetben könnyen felvihetők.)</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="51">(+/-) A Fájl menüponton belül hozz létre két menüitemet</p>
<ul sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="52">
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="52">Az első elem neve legyen Megnyitás, ez fog szolgálni a kapott állomány megnyitására</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="53">A második elem neve legyen Bezárás, ez egyszerűen bezárja az applikációt</li>
</ul>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="55">(+/-)A Statisztika menüponton belül három elem szükséges: Raktáranként, Felhasználónként és Kategóriánként</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="57">(+/-) Helyezz ki a Formra három legördülő mezőt (<code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="57">Combobox</code>), melléjük egy-egy címkét. A legördülők a felvivő felhasználó (<code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="57">cbUser</code>), a raktár (<code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="57">cbRaktar</code>) és a kategória (<code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="57">cbKat</code>) szerinti szűrések indítására fognak szolgálni. Nevezd el őket értelemszerűenn, adj értéket a címkéknek.</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="59">(+/-) Helyezz ki a Fomra egy datagridviewt, amely a szűrések eredményét fogja megjeleníteni.</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="61"><img src="../../images/linq_advanced.png" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="61" alt="linq_advanced.png"></p>
<h2 id="fájl-betöltése" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="63">Fájl betöltése</h2>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="64">(+/-) Rendelj eseménykezelőt a fájl megnyitása menüponthoz! (Ugyanúgy működik, mint egy sima Button.)</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="66">(+/-)Az eseménykiszolgálóban szabványos fájlmegnyitó dialógus segítségével nyisd meg a felhasználó által választott fájlt.</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="68">(+/-)A beolvasó ciklusban töltsd be az állományt a három korábban létrehozott osztályszintű listába az alábbi módon:</p>
<ul sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="69">
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="69">Haladj végig a sorokon (a fejléc átugrásával), és minden sorhoz példányosíts egy <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="69">Termek</code> példányt. Állítsd be a mezők értékét értelemszerűen. A dátumot az év, a hó és a nap összefűzéséből kapjuk, például egy 2022.05.01 értékű dátum létrehozása a következő módon történik:</li>
</ul>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="70">DateTime myDate = new DateTime(2022,5,1)
</code></pre>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="74">(+/-)A kategórialistához, illetve a raktárlistához csak akkor adj új elemet, ha az adott sorban kapott értékek nem szerepelnek még bennük.</p>
<ul sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="75">
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="75">Továbbra is a beolvasó ciklus törzsében dolgozva add a Termek példányt a termekek listához.</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="76">LINQ segítségével vizsgáld meg, hogy az aktuális sorbéli kategóriát tartalmazza-e a már a kategóriák lista, ha nem, akkor add hozzá.</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="77">Járj el ugyanígy a raktárakat illetően.</li>
</ul>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="79">OpenFileDialog ofd = new OpenFileDialog();
if (ofd.ShowDialog() != DialogResult.OK)
    return;            

using (StreamReader sr = new StreamReader(ofd.FileName))
{
    while (!sr.EndOfStream)
    {
        // Sor beolvasása
        string[] sor = sr.ReadLine().Split(';');

        // Termék létrehozása
        Termek t = new Termek();
        t.Termekkod = sor[0];
        t.Termeknev = sor[1];
        t.Listaar = decimal.Parse(sor[2]);
        t.Keszlet = decimal.Parse(sor[3]);
        t.Megys = sor[4];
        t.Felvitte = sor[5];
        t.Felvitel = new DateTime(int.Parse(sor[6]), int.Parse(sor[7]), int.Parse(sor[8]));
        t.KategoriaKod = int.Parse(sor[9]);
        t.RaktarKod = int.Parse(sor[11]);
        termekek.Add(t);

        // Kategória létrehozása, ha még nincs ilyen
        var szurtKategoriak = from x in kategoriak 
                                where x.KategoriaKod == t.KategoriaKod 
                                select x;
        if (szurtKategoriak.Count() == 0)
        {
            Kategoria k = new Kategoria();
            k.KategoriaKod = t.KategoriaKod;
            k.KategoriaNev = sor[10];
            kategoriak.Add(k);
        }

        // Raktár létrehozása, ha még nincs ilyen
        var szurtRaktarak = from x in raktarak 
                            where x.RaktarKod == t.RaktarKod 
                            select x;
        if (szurtRaktarak.Count() == 0)
        {
            Raktar r = new Raktar();
            r.RaktarKod = t.RaktarKod;
            r.RaktarNev = sor[12];
            r.RaktarCim = sor[13];
            raktarak.Add(r);
        }
    }
}
</code></pre>
<h2 id="adatkötés" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="132">Adatkötés</h2>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="133">A fájlbetöltés után, továbbra is az eseménykezelőben maradva gondoskodni kell a legördülő mezők feltöltéséről.</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="135">(+/-) Érdemes ezen a ponton lekérdezni a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="135">termekek</code> lista tartalmát, hogy lássuk sikeres volt-e a betöltés. (Ezt a kódsort később töröld, vagy kommenteld, mert nem lesz rá szükség. Csak a teszteléshez kell.)</p>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="136">dataGridView1.DataSource = termekek;
</code></pre>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="140">(+/-) Készíts LINQ lekérdezést, amely lekérdezi a rögzítő felhasználó nevét, kiszűri az ismétlődéseket és beállítja, hogy a felhasználónevek tárolására szolgáló legördülő mező tartalmazza a lehetséges felhasználókat. A megfelelő eljárás az, hogy lekérdezzük a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="140">Felvitte</code> mezők különféle értékeit, az ismétlődést a Distinct() metódus segítsévéel eltávolítjuk, majd az eredményt listává konvertáljuk.</p>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="141">var felhasznalok = (from x in termekek
                    select x.Felvitte)
                    .Distinct()
                    .ToList();
cbUser.DataSource = felhasznalok;
</code></pre>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="149">(+/-) A kategóriák és a raktárak esetében a feladat eltérő, mert a legördülőknek <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="149">Kategoria</code> illetve <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="149">Raktar</code> példányokat kell megjeleníteniük a kategoriak illetve a raktarak lista alapján. Ehhez a Listbox kontrollhoz hasonlóak be kell állítani a DisplayMember és a Valuemember tulajdonságokat.</p>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="150">cbKat.DataSource = kategoriak;
cbRaktar.DataSource = raktarak;
cbKat.DisplayMember = &quot;KategoriaNev&quot;;
cbRaktar.DisplayMember = &quot;RaktarNev&quot;;
cbKat.ValueMember = &quot;KategoriaKod&quot;;
cbRaktar.ValueMember = &quot;RaktarKod&quot;;
</code></pre>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="159">(+/-) Mivel azt szeretnék, hogy a legördülő mezőkben kezdetben semmi se legyen kiválasztva, állítsuk a három legördülő SelectedIndex tulajdonságát -1-re!</p>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="160">cbRaktar.SelectedIndex = -1;
cbKat.SelectedIndex = -1;
cbUser.SelectedIndex = -1;
</code></pre>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="166">(+/-) Készítsünk egy visszatérési érték nélküli függvényt a Form1-en <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="166">TermekListaz</code> neven. Feladata a termékek lista szűrése és az eredmények felhasználóbarát megjelenítése a gridben. Hívjuk meg ezt a függvényt a betöltés végén!</p>
<ul sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="167">
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="167">Egy-egy változóban tároljuk a választott felhasználót, raktárkódot és kategóriakódot. Ha nincs választott elem, a változók értéke legyen üres karakterlánc a felhasználónév esetében, 0 a kategóriakód és a raktárkód esetében.</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="168">Állítsunk össze egy LINQ lekérdezést, amely a következő oszlopokból álló listát állítja elő: Termékkód, terméknév, egységár, felvitte, készlet, mennyiségi egység, felvitel időpontja, kategória neve és raktár neve. Ebben a lekérdezésben nem állnak rendelkezésre navigációs kulcsok, így a raktár és a készlet nevét a LINQ join műveletével kell megszereznünk a kategóriakód és a raktárkód alapján.</li>
</ul>
<blockquote sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="170">
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="170">Jelen példában nem adatbázis táblákkal dolgozunk, és nincsenek az adathalmazaink között megfelelő táblakapcsolatok. Ezért nem működik a LINQ-ban megszokott, táblakapcsolatok mentén történő lekérdezés. Ezért kell az SQL nyelvek INNER JOIN utasításához hasonló megoldást alkalmaznunk.</p>
</blockquote>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="172">(+/-) Az előállított listát rendeljük hozzá a Datagridview-hoz.</p>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="173">public void Termeklistaz()
{
    // Szűrők beolvasása alapértékekkel
    int katkod = 0;
    if (cbKat.SelectedItem != null) 
        katkod = ((Kategoria)cbKat.SelectedItem).KategoriaKod;

    int raktkod = 0;
    if (cbRaktar.SelectedItem != null)
        raktkod = ((Raktar)cbRaktar.SelectedItem).RaktarKod;
            
    string user = cbUser.Text;

    // Adatok lekérdezése
    var x = (from t in termekek
                join k in kategoriak on t.KategoriaKod equals k.KategoriaKod
                join r in raktarak on t.RaktarKod equals r.RaktarKod
                where ((katkod == 0) || (k.KategoriaKod == katkod)) &amp;&amp;
                    ((raktkod == 0) || (r.RaktarKod == raktkod)) &amp;&amp;
                    ((user == &quot;&quot;) || (t.Felvitte == user))
                select new
                {
                    Termékkód = t.Termekkod,
                    Terméknév = t.Termeknev,
                    Egységár = t.Listaar,
                    Felvitte = t.Felvitte,
                    Készlet = t.Keszlet,
                    Mee = t.Megys,
                    Felvitel = t.Felvitel,
                    Kategóra = k.KategoriaNev,
                    Raktár = r.RaktarNev
                })
                .ToList();

    dataGridView1.DataSource = x;
}
</code></pre>
<h2 id="szűrések-megvalósítása" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="212">Szűrések megvalósítása</h2>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="213">(+/-) Rendeljünk közös eseménykezelőt a három legördülő mező <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="213">SelectedIndexChanged</code> eseményéhez, hívjuk meg bennük a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="213">Termeklistaz</code> eljárást.</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="215">(+/-) Problémát jelent, hogy ha már egyszer kiválasztottunk egy elemet, akkor utána már nincs lehetőségünk törölni azt a szűrésből. Ennek megoldására több módszer is kínálkozik. Az egyik, hogy kihasználjuk a mező szerkeszthetőségét, és a szöveg törlési eseményhez kötjük a szűrőfeltétel ürítését. Ehhez rendeljünk közös eseménykezelőt a TextChanged eseményhez,  és ha az adott mező értéke üres,  állítsuk a SelectedIndex értéket ismét -1-re, és hívjuk meg a TermekListaz eljárást!</p>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="217">private void FilterIndexChanged(object sender, EventArgs e)
{
    Termeklistaz();
}

private void FilterCleared_TextChanged(object sender, EventArgs e)
{
    var szuro = (ComboBox)sender;
    if (szuro.Text == &quot;&quot;)
    {
        szuro.SelectedIndex = -1;
        // Az index kódból történő megváltoztatása sajnos nem váltja ki az IndexChanged eseményt
        // Ezért itt is újra kell listáznunk a termékeket
        Termeklistaz();
    }
}
</code></pre>
<h2 id="bezárás" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="236">Bezárás</h2>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="237">A korábban létrehozott bezárás gombhoz készítsünk eseménykezelőt és benne kérdezzünk vissza a felhasználó bezárási szándékával kapcsolatban.</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="239">(+/-) Hozz létre eseménykezelőt a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="239">Bezárás</code> menüpontra kattintáshoz</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="241">(+/-) Jeleníts meg egy <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="241">MessageBox</code> segítségével egy visszakérdezést a bezárással kapcsolatban. A <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="241">MessageBox</code> egyik paraméterezése:</p>
<ul sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="243">
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="243">Megjelenített üzenet</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="244">Felugró ablak fejléce</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="245">Felugró ablak bezáró gombjainak típusa</li>
</ul>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="247">Az utóbbinak megfelelően olyan gombok jeleníthetőek meg a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="247">MessageBox</code>-on, melyek bezárják azt, és visszaadják a megfelelő <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="247">DialogResult</code> típusú eredményt. Ezzel a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="247">Form</code> kezeléshez hasonlóan ellenőrizhető a felhasználó válasza.</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="249">(+/-) Ellenőrizd a felhasználó válaszát és csak akkor zárd be az alkalmazást (<code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="249">Application.Exit()</code>), ha &quot;Igen&quot;-el válaszolt a kérdésre.</p>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="251">var messageBoxResult = MessageBox.Show(
    &quot;Biztosan be akarod zárni az alkalmazást?&quot;,
    &quot;Bezárás&quot;,
    MessageBoxButtons.YesNo);

if (messageBoxResult != DialogResult.Yes)
    return;

Application.Exit();
</code></pre>
<h2 id="aggregált-statisztikák" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="263">Aggregált statisztikák</h2>
<h3 id="statisztika-megjelenítésére-szolgáló-form-létrehozása" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="265">Statisztika megjelenítésére szolgáló form létrehozása</h3>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="266">(+/-) Hozz létre egy új formot <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="266">StatisztikaForm</code> néven!</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="268">(+/-) A <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="268">StatisztikaForm</code> helyezz el egy datagridview komponenst úgy, hogy teljesen kitöltse a rendelkezésre álló területet.</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="270">(+/-) Állítsd a datagridview modifiers tulajdonságát public-ra, hogy a Form1-ből legyen lehetőséged beállítani a DataSource tulajdonságát.</p>
<h3 id="statisztikák-betöltése" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="272">Statisztikák betöltése</h3>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="273">A Form1-en korábban létrehozott Statisztika főmenű egyes elemeinek feladata az alábbi:</p>
<ul sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="274">
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="274">Raktáranként: Jelenítse meg raktárkódonként a készletmennyiséget</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="275">Kategóriánként: jelenítse meg kategóriánként a darabszámot és az átlagos listaárat</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="276">Felhasználónként: Jelenítse meg  felhasználónként a felvitt tételek számát</li>
</ul>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="278">(+/-) A Form1-en korábban létrehozott Statisztika főmenű egyes menüpontjaihoz rendelj eseménykezelőket.</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="280">(+/-) A menüpontok eseménykezelőiben:</p>
<ul sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="282">
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="282">Példányosíts egy <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="282">StatisztikaForm</code>-ot</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="283">Készítsd el a megfelelő LINQ lekérdezést</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="284">Rendeld a lekérdezés eredményét a StatisztikaForm gridjéhez</li>
<li sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="285">Jelenítsd meg a statisztikaformot úgy, hogy ne lehessen mögékattintani</li>
</ul>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="287">Ehhez a feladathoz szükséged lesz az SQL nyelvből már ismert GROUP BY alkalmazására. Az alábbi példában látható ennek a szintaktikája. Ebben az egyszerű példában először meg kell adni, hogy melyik mezőt szeretnénk majd a csoportosításban aggregálni. Utána pedig a csoportosítás alapját kell kijelölni. A <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="287">g</code> egy tetszőleges megnevezése a csoportosításból létrejött rekordoknak.</p>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="289">A <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="289">select</code> részben innentől nem érjük el az <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="289">x</code> rekordokat, csak a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="289">g</code>-ket. A <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="289">g</code> egy mini lekérdezés, ami a csoporthoz tartozó elemek listáját tartalmazza. Ezeket az elemeket aggregálhatjuk a megszokott függvényekkel (pl.: Count, Sum), továbbá a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="289">Key</code> utasítással lekérdezhetjük az aktuális csoportosítás alapjául szolgáló értéket (jelen esetben a raktárkódot).</p>
<blockquote sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="291">
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="291">A példában a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="291">group</code> után az <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="291">x.Keszlet</code> megadása miatt a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="291">g</code> csak egy oszlopot tartalmaz, ezért tudjuk lekérdezni később a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="291">select</code>-ben a szummáját. Ha a <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="291">group</code> után csak <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="291">x</code>-et írnánk, akkor <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="291">g</code> tartalmazná a termékek összes mezőjét, és a szumma kiszámításához egy újabb rész LINQ lekérdezést kéne írnunk a sorba a megfelelő oszlop összegények meghatározásához.</p>
</blockquote>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="293">Példaként álljon itt a raktárankénti statisztika menüpont kódja:</p>
<pre><code class="lang-csharp" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="295">StatisztikaForm sf = new StatisztikaForm();

var raktarKeszletek = from x in termekek                                  
                        group x.Keszlet by x.RaktarKod into g
                        select new
                        {
                            Raktárkód = g.Key,
                            Készlet = g.Sum()
                        };
sf.dataGridView1.DataSource = raktarKeszletek.ToList();
sf.ShowDialog();
</code></pre>
<h3 id="bónusz-feladat" sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="311">Bónusz feladat</h3>
<p sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="312">(+/-) A <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="312">Raktár</code> és <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="312">Kategória</code> statisztikákban a megfelelő elemek kódja jelenik meg, hiszen a termékek listában csak ez érhető el. Próbáld meg <code sourcefile="softeng/6_elm_linq_extra/index.md" sourcestartlinenumber="312">join</code> felhasználásával úgy bővíteni a lekérdezést, hogy a név jelenjen meg mindkettő esetében a kód helyett.</p>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                  <li>
                    <a href="https://github.com/altinum/szamtud_docfx/blob/main/softeng/6_elm_linq_extra/index.md/#L1" class="contribution-link">Improve this Doc</a>
                  </li>
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../../styles/docfx.js"></script>
    <script type="text/javascript" src="../../styles/main.js"></script>
  </body>
</html>
